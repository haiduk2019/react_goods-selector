{"version":3,"sources":["App.js","index.js"],"names":["preparedGoods","map","good","name","selected","id","uuidv4","App","state","goods","selectedGoods","addGood","setState","prevState","item","removeGood","filter","removeSelectedGoods","showTitle","length","slice","join","this","title","className","type","onClick","key","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iTAkBMA,EAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGoCC,KAAI,SAAAC,GAAI,MAC5C,CACEC,KAAMD,EACNE,UAAU,EACVC,GAAIC,kBAuIOC,E,4MAlIbC,MAAQ,CACNC,MAAOT,EAAcC,KAAI,SAAAC,GAAI,MAAmB,QAAdA,EAAKC,KAAL,2BAE3BD,GAF2B,IAErBE,UAAU,IAFW,eAIzBF,MACTQ,cAAe,CAAC,Q,EAGlBC,QAAU,SAACT,GACT,EAAKU,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAOI,EAAUJ,MAAMR,KAAI,SAAAa,GAAI,OAAKA,IAASZ,EAAT,2BAE7BY,GAF6B,IAEvBV,UAAU,IAFa,eAI3BU,MACTJ,cAAc,GAAD,mBAAMG,EAAUH,eAAhB,CAA+BR,EAAKC,Y,EAIrDY,WAAa,SAACb,GACZ,EAAKU,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAOI,EAAUJ,MAAMR,KAAI,SAAAa,GAAI,OAAKA,IAASZ,EAAT,2BAE7BY,GAF6B,IAEvBV,UAAU,IAFa,eAI3BU,MACTJ,cAAeG,EAAUH,cAAcM,QAAO,SAAAF,GAAI,OAAIA,IAASZ,EAAKC,a,EAIxEc,oBAAsB,WACpB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAOI,EAAUJ,MAAMR,KAAI,SAAAa,GAAI,kCAC1BA,GAD0B,IAE7BV,UAAU,OAEZM,cAAe,Q,EAInBQ,UAAY,WAAO,IACTR,EAAkB,EAAKF,MAAvBE,cAER,OAA6B,IAAzBA,EAAcS,OACT,oBAGoB,IAAzBT,EAAcS,OACV,GAAN,OAAUT,EAAc,GAAxB,iBAGI,GAAN,OAAUA,EAAcU,MAAM,GAAI,GAAGC,KAAK,MAA1C,uBACQX,EAAcU,OAAO,GAD7B,kB,4CAIF,WAAU,IAAD,SAC0BE,KAAKd,MAA9BE,EADD,EACCA,cAAeD,EADhB,EACgBA,MACjBc,EAAQD,KAAKJ,YAEnB,OACE,yBAAKM,UAAU,iDACb,wBAAIA,UAAU,eACXD,GAEFb,EAAcS,OAAS,EAEpB,uDAEG,IACAT,EAAcS,QAGjB,GAEHT,EAAcS,OAAS,EAEpB,4BACEM,KAAK,SACLD,UAAU,qBACVE,QAASJ,KAAKL,qBAHhB,cAQA,GAEJ,wBAAIO,UAAU,yCACXf,EAAMR,KAAI,SAAAC,GAAI,OACb,wBACEyB,IAAKzB,EAAKG,GACVmB,UAAWI,IAAW,kBAAmB,SAAU,cACjD,MAAO,yBACP,qBAAsB,MAAO,SAAU,CACrC,yBAA0B1B,EAAKE,SAC/B,2BAA4BF,EAAKE,YAGpCF,EAAKC,KACLD,EAAKE,SAEF,4BACEsB,QAAS,WACP,EAAKX,WAAWb,IAElBuB,KAAK,SACLD,UAAU,uBALZ,UAWA,4BACEC,KAAK,SACLD,UAAU,sBACVE,QAAS,WACP,EAAKf,QAAQT,KAJjB,iB,GAjHA2B,IAAMC,WCtBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.0046879f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map(good => (\n  {\n    name: good,\n    selected: false,\n    id: uuidv4(),\n  }\n));\n\nclass App extends React.Component {\n  state = {\n    goods: preparedGoods.map(good => (good.name === 'Jam'\n      ? {\n        ...good, selected: true,\n      }\n      : { ...good })),\n    selectedGoods: ['Jam'],\n  }\n\n  addGood = (good) => {\n    this.setState(prevState => ({\n      goods: prevState.goods.map(item => (item === good\n        ? {\n          ...item, selected: true,\n        }\n        : { ...item })),\n      selectedGoods: [...prevState.selectedGoods, good.name],\n    }));\n  }\n\n  removeGood = (good) => {\n    this.setState(prevState => ({\n      goods: prevState.goods.map(item => (item === good\n        ? {\n          ...item, selected: false,\n        }\n        : { ...item })),\n      selectedGoods: prevState.selectedGoods.filter(item => item !== good.name),\n    }));\n  }\n\n  removeSelectedGoods = () => {\n    this.setState(prevState => ({\n      goods: prevState.goods.map(item => ({\n        ...item,\n        selected: false,\n      })),\n      selectedGoods: [],\n    }));\n  }\n\n  showTitle = () => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      return `${selectedGoods[0]} is  selected`;\n    }\n\n    return `${selectedGoods.slice(0, -1).join(', ')}\n      and ${selectedGoods.slice(-1)} are selected`;\n  }\n\n  render() {\n    const { selectedGoods, goods } = this.state;\n    const title = this.showTitle();\n\n    return (\n      <div className=\"App d-flex flex-column align-items-center m-4\">\n        <h1 className=\"text-center\">\n          {title}\n        </h1>\n        {selectedGoods.length > 0\n          ? (\n            <p>\n              Number of selected goods:\n              {' '}\n              {selectedGoods.length}\n            </p>\n          )\n          : ''\n        }\n        {selectedGoods.length > 0\n          ? (\n            <button\n              type=\"button\"\n              className=\"btn btn-danger m-3\"\n              onClick={this.removeSelectedGoods}\n            >\n              Remove all\n            </button>\n          )\n          : ''\n        }\n        <ul className=\"list-group  d-flex flex-row flex-wrap\">\n          {goods.map(good => (\n            <li\n              key={good.id}\n              className={classNames('list-group-item', 'd-flex', 'flex-grow-1',\n                'm-3', 'justify-content-evenly',\n                'align-items-center', 'p-4', 'shadow', {\n                  'list-group-item-danger': good.selected,\n                  'list-group-item-success': !good.selected,\n                })}\n            >\n              {good.name}\n              {good.selected\n                ? (\n                  <button\n                    onClick={() => {\n                      this.removeGood(good);\n                    }}\n                    type=\"button\"\n                    className=\"btn btn-warning m-3\"\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success m-3\"\n                    onClick={() => {\n                      this.addGood(good);\n                    }}\n                  >\n                    Add\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}